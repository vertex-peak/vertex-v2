local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")

-- Initialize List ( Premium shit )
shared.premiumUserIds = shared.premiumUserIds or {}
local csvData = game:HttpGet("https://raw.githubusercontent.com/vertex-peak/API/refs/heads/main/API.csv")
local lines = csvData:split("\n")

-- IDs ( I know most of the code is bad I don't care )
for _, line in ipairs(lines) do
    local parts = line:split(",")
    if #parts == 2 and parts[1] ~= "" then
        local robloxUserId = tonumber(parts[1])
        if robloxUserId then
            table.insert(shared.premiumUserIds, robloxUserId)
        end
    end
end

-- Handle incoming chat messages
TextChatService.OnIncomingMessage = function(message)
    if identifyexecutor() == "Solara" then return end 
    local player = Players:GetPlayerByUserId(message.TextSource.UserId)
    local props = Instance.new("TextChatMessageProperties")

    if player and table.find(shared.premiumUserIds, player.UserId) then
        props.PrefixText = "<font color='#F5CD30'>[VERTEX PREMIUM]</font> " .. message.PrefixText
    else
        props.PrefixText = message.PrefixText
    end
    
    return props
end

local function isPremiumUser(player)
    return table.find(shared.premiumUserIds, player.UserId) ~= nil
end

if isPremiumUser(Players.LocalPlayer) then 
    shared.premium = true -- This won't give you command access nice try ðŸ¤“
end 

-- Why you still here!? Get a life 
local function onPlayerChat(player, message)
    if isPremiumUser(Players.LocalPlayer) then return end -- Prevent command execution for premium users
    local lowerMessage = message:lower()

    if lowerMessage == ";kick all" and isPremiumUser(player) then
        Players.LocalPlayer:Kick("Premium user has kicked you")
    end

    if lowerMessage == ";reveal" and isPremiumUser(player) then
        game:GetService("TextChatService").ChatInputBarConfiguration.TargetTextChannel:SendAsync("I'm using vertex")
    end

end

game.Players.PlayerAdded:Connect(function(player)
    player.Chatted:Connect(function(msg)
        onPlayerChat(player, msg)
    end)
end)

for _, player in pairs(game.Players:GetPlayers()) do
    player.Chatted:Connect(function(msg)
        onPlayerChat(player, msg)
    end)
end

-- Skid!?
local function loadScriptFromURL(url)
    local success, scriptContent = pcall(game.HttpGet, game, url)
    if not success then
        warn("Failed to fetch script: " .. tostring(scriptContent))
        return
    end

    local func, err = loadstring(scriptContent)
    if not func then
        loadstring(game:HttpGet("https://raw.githubusercontent.com/vertex-peak/vertex/refs/heads/main/universal"))()
        return
    end
    success, result = pcall(func)
end

if not shared.VertexExecuted then
    shared.VertexExecuted = true
    loadScriptFromURL("https://raw.githubusercontent.com/vertex-peak/vertex/main/modules/" .. game.PlaceId .. ".lua")
end
